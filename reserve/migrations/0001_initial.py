# Generated by Django 5.1.1 on 2025-06-11 09:44

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('capacity', models.PositiveIntegerField(blank=True, help_text='Maximum number of participants.', null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Price per Participant')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('event_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('capacity', models.PositiveIntegerField(blank=True, help_text='Maximum number of attendees.', null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Price per Attendee')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['event_date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='GolfCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('address', models.CharField(blank=True, max_length=300)),
                ('holes', models.IntegerField(default=18)),
                ('par', models.IntegerField(default=72)),
            ],
            options={
                'verbose_name': 'Golf Course',
                'verbose_name_plural': 'Golf Courses',
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('address', models.CharField(max_length=300)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('amenities', models.TextField(blank=True, help_text='List of amenities offered by the hotel (e.g., swimming pool, gym, spa)')),
                ('rooms_available', models.PositiveIntegerField(default=0, verbose_name='Number of Rooms Available')),
                ('price_per_night', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Price Per Night')),
            ],
            options={
                'verbose_name': 'Hotel',
                'verbose_name_plural': 'Hotels',
            },
        ),
        migrations.CreateModel(
            name='HotelTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_number', models.IntegerField(verbose_name='Table Number')),
                ('capacity', models.IntegerField(verbose_name='Table Capacity')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='reserve.hotel')),
            ],
            options={
                'verbose_name': 'Hotel Table',
                'verbose_name_plural': 'Hotel Tables',
                'unique_together': {('hotel', 'table_number')},
            },
        ),
        migrations.CreateModel(
            name='MemberProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership_status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='pending', help_text='Membership approval status', max_length=10)),
                ('membership_type', models.CharField(choices=[('full', 'Full'), ('social', 'Social'), ('junior', 'Junior'), ('senior', 'Senior'), ('corporate', 'Corporate')], default='full', max_length=10, verbose_name='Membership Type')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('joined_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Joined Date')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('handicap', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='Golf Handicap')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200, verbose_name='Emergency Contact Name')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Emergency Contact Phone')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Member Profile',
                'verbose_name_plural': 'Member Profiles',
            },
        ),
        migrations.CreateModel(
            name='TeeTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('max_players', models.IntegerField(default=4)),
                ('available', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Price per Player')),
                ('golf_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tee_times', to='reserve.golfcourse')),
            ],
            options={
                'verbose_name': 'Tee Time',
                'verbose_name_plural': 'Tee Times',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_type', models.CharField(choices=[('hotel', 'Hotel Room'), ('table', 'Hotel Table'), ('activity', 'Activity'), ('event', 'Event'), ('tee_time', 'Tee Time')], max_length=10)),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('scheduled_date', models.DateTimeField(verbose_name='Scheduled Date and Time')),
                ('number_of_guests', models.PositiveIntegerField(default=1, verbose_name='Number of Guests')),
                ('notes', models.TextField(blank=True, verbose_name='Special Requests/Notes')),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reserve.activity')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reserve.event')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reserve.hotel')),
                ('hotel_table', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reserve.hoteltable')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='reserve.memberprofile')),
                ('tee_time', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reserve.teetime')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-booking_date'],
            },
        ),
    ]
